/*Given a sorted array with possibly duplicate elements, the task is to find indexes of first and last occurrences of an element x in the given array.

Note: If the number x is not found in the array just print '-1'.

Input:
The first line consists of an integer T i.e number of test cases. The first line of each test case contains two integers n and x. The second line contains n spaced integers.

Output:
Print index of the first and last occurrences of the number x with a space in between.

Constraints: 
1<=T<=100
1<=n,a[i]<=1000

Example:
Input:
2
9 5
1 3 5 5 5 5 67 123 125
9 7
1 3 5 5 5 5 7 123 125

Output:
2 5
6 6
*/
#include <iostream>
using namespace std;

int main() {
	int t;
	cin>>t;
	while(t--)
	{
	    int n,k,i,j,flag=0;
	    cin>>n>>k;
	    int a[n];
	    for(i=0;i<n;i++){
	        cin>>a[i];
	    }
	    int indexR=0,indexL=0;
	    for(i=0;i<n;i++){
	        if(a[i]==k){
	            indexR=i;
	            for(j=i;j<n;j++){
	                if(a[j]!=k){
	                   indexL=j-1;
	                   cout<<indexR<<" "<<indexL;
	                   flag=1;
	                   break;
	                }
	            }
	        }
	        if(flag==1){
	            break;
	        }
	        else{
	            continue;
	        }
	    }
	    if(flag==0){
	        cout<<"-1";
	    }
	    //cout<<indexR<<" "<<indexL;
	    cout<<"\n";
	}

	return 0;
}
